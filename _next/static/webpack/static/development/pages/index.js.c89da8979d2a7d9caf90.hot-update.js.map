{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c89da8979d2a7d9caf90.hot-update.js","sources":["webpack:///./src/components/Carousel/Carousel.js"],"sourcesContent":["import * as React from 'react';\nimport { useSprings, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { Box, Flex } from '@chakra-ui/core';\nimport { useSpring } from 'framer-motion';\n\nexport default function Carousel({ activeIndex = 0, auto = 0, children = [], ...props }) {\n  const sliderRef = React.useRef();\n  const [slide, setSlide] = React.useState(0);\n  const [isDragging, setDragging] = React.useState(false);\n\n  // Initialize slides with spring\n  const [springProps, setSpringProps] = useSprings(children.length, (index) => ({\n    offset: index,\n  }));\n\n  const bind = useDrag(\n    ({ down, movement: [xDelta], direction: [xDir], distance, cancel, first }) => {\n      if (first) {\n        setDragging(true);\n      }\n      if (sliderRef && sliderRef.current && sliderRef.current.parentElement) {\n        const { width } = sliderRef.current.parentElement.getBoundingClientRect();\n\n        if (down && distance > width / 3) {\n          if (cancel) cancel();\n          setSlide((slide + (xDir > 0 ? -1 : 1)) % children.length);\n        }\n        setSpringProps((index) => ({\n          offset: (down ? xDelta : 0) / width + (index - slide),\n        }));\n      }\n    },\n    { filterTaps: true, delay: true, axis: 'x', enabled: true /*children.length > 1*/ }\n  );\n\n  // Triggered on slide change\n  React.useEffect(() => {\n    setSpringProps((index) => ({ offset: index - slide }));\n  }, [slide, setSpringProps]);\n\n  // Effect for autosliding\n  React.useEffect(() => {\n    let interval;\n\n    if (auto > 0) {\n      interval = setInterval(() => {\n        const targetIndex = (slide + 1) % children.length;\n        setSlide(targetIndex);\n      }, auto);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [auto, children.length, slide]);\n\n  // Jump to slide index when prop changes\n  React.useEffect(() => {\n    setSlide(activeIndex % children.length);\n  }, [activeIndex, children.length]);\n\n  const nextSlide = () => {\n    setSlide((slide + 1) & children.length);\n  };\n\n  const previousSlide = () => {\n    setSlide((slide - 1) & children.length);\n  };\n\n  const bulletProps = useSpring({\n    transform: `translateX(${(slide + 1) * 2}rem)`,\n  });\n\n  console.log(bulletProps);\n\n  return (\n    <Box minH=\"320px\" w=\"100%\" ref={sliderRef} {...props}>\n      <Box position=\"relative\" overflow=\"hidden\" minH=\"320px\" w=\"100%\">\n        {/* {hasArrows && (\n          <StyledSliderArrows>\n            <Arrow ArrowComponent={ArrowComponent} arrowStyle={arrowStyle} direction=\"left\" onClick={previousSlide} />\n            <Arrow ArrowComponent={ArrowComponent} arrowStyle={arrowStyle} direction=\"right\" onClick={nextSlide} />\n          </StyledSliderArrows>\n        )}\n        {hasBullets && (\n          <StyledBullets>\n            <StyledBulletList>\n              {children.map((_, index) => (\n                <Bullet\n                  key={index} // eslint-disable-line react/no-array-index-key\n                  index={index}\n                  BulletComponent={BulletComponent}\n                  setSlide={setSlide}\n                  activeIndex={slide}\n                  bulletStyle={bulletStyle}\n                />\n              ))}\n            </StyledBulletList>\n          </StyledBullets>\n        )} */}\n        {springProps.map(({ offset }, index) => (\n          <animated.div\n            {...bind()}\n            key={index}\n            style={{\n              transform: offset.interpolate((offsetX) => `translate3d(${offsetX * 100}%, 0, 0)`),\n              position: 'absolute',\n              display: 'inline-block',\n              width: '100%',\n              height: '100%',\n              willChange: 'transform',\n            }}\n          >\n            <Box minH=\"320px\" w=\"100%\" userSelect={isDragging ? 'none' : 'auto'}>\n              {children[index]}\n            </Box>\n          </animated.div>\n        ))}\n      </Box>\n      {children.length > 1 ? (\n        <Flex mx={[2, 8, 24]} alignItems=\"center\" position=\"relative\">\n          {children.map((_, i) => (\n            <Box\n              mx=\"0.5rem\"\n              h=\"1rem\"\n              w=\"1rem\"\n              borderRadius=\"50%\"\n              backgroundColor=\"gray.200\"\n              transition=\"background-color 0.2s linear\"\n              cursor=\"pointer\"\n              onClick={() => setSlide(i)}\n            />\n          ))}\n          <animated.div\n            mx=\"0.5rem\"\n            h=\"1rem\"\n            w=\"1rem\"\n            borderRadius=\"50%\"\n            backgroundColor=\"green.200\"\n            // transition=\"background-color 0.2s linear\"\n            // cursor=\"pointer\"\n            position=\"absolute\"\n            style={{\n              height: '1rem',\n              width: '1rem',\n              borderRadius: '50%',\n              backgroundColor: 'red',\n              ...bulletProps,\n            }}\n          />\n        </Flex>\n      ) : null}\n    </Box>\n  );\n}\n\nconst AnimatedBox = animated(Box);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAMA;AACA;AADA;AAAA;AANA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AACA;AACA;AACA;AACA;AAEA;AAPA;AAQA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAEA;;;;A","sourceRoot":""}