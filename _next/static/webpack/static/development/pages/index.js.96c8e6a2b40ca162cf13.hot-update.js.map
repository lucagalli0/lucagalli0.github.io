{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.96c8e6a2b40ca162cf13.hot-update.js","sources":["webpack:///./src/components/Carousel/Carousel.js"],"sourcesContent":["import * as React from 'react';\nimport { useSprings, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { Box } from '@chakra-ui/core';\n\nexport default function Carousel({ activeIndex = 0, auto = 0, children = [], ...props }) {\n  const sliderRef = React.useRef();\n  const [slide, setSlide] = React.useState(0);\n  const [isDragging, setDragging] = React.useState(false);\n\n  // Initialize slides with spring\n  const [springProps, setSpringProps] = useSprings(children.length, (index) => ({\n    offset: index,\n  }));\n\n  const bind = useDrag(({ down, movement: [xDelta], direction: [xDir], distance, cancel, first }) => {\n    if (first) {\n      setDragging(true);\n    }\n    if (sliderRef && sliderRef.current && sliderRef.current.parentElement) {\n      const { width } = sliderRef.current.parentElement.getBoundingClientRect();\n\n      if (down && distance > width / 2) {\n        if (cancel) cancel();\n        setSlide((slide + (xDir > 0 ? -1 : 1)) % children.length);\n      }\n      setSpringProps((index) => ({\n        offset: (down ? xDelta : 0) / width + (index - slide),\n      }));\n    }\n  });\n\n  // Triggered on slide change\n  React.useEffect(() => {\n    setSpringProps((index) => ({ offset: index - slide }));\n  }, [slide, setSpringProps]);\n\n  // Effect for autosliding\n  React.useEffect(() => {\n    let interval;\n\n    if (auto > 0) {\n      interval = setInterval(() => {\n        const targetIndex = (slide + 1) % children.length;\n        setSlide(targetIndex);\n      }, auto);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [auto, children.length, slide]);\n\n  // Jump to slide index when prop changes\n  React.useEffect(() => {\n    setSlide(activeIndex % children.length);\n  }, [activeIndex, children.length]);\n\n  const nextSlide = () => {\n    setSlide((slide + 1) & children.length);\n  };\n\n  const previousSlide = () => {\n    setSlide((slide - 1) & children.length);\n  };\n\n  return (\n    <Box minH=\"320px\" w=\"100%\" ref={sliderRef} {...props}>\n      <Box position=\"relative\" overflow=\"hidden\" h=\"320px\" w=\"100%\">\n        {/* {hasArrows && (\n          <StyledSliderArrows>\n            <Arrow ArrowComponent={ArrowComponent} arrowStyle={arrowStyle} direction=\"left\" onClick={previousSlide} />\n            <Arrow ArrowComponent={ArrowComponent} arrowStyle={arrowStyle} direction=\"right\" onClick={nextSlide} />\n          </StyledSliderArrows>\n        )}\n        {hasBullets && (\n          <StyledBullets>\n            <StyledBulletList>\n              {children.map((_, index) => (\n                <Bullet\n                  key={index} // eslint-disable-line react/no-array-index-key\n                  index={index}\n                  BulletComponent={BulletComponent}\n                  setSlide={setSlide}\n                  activeIndex={slide}\n                  bulletStyle={bulletStyle}\n                />\n              ))}\n            </StyledBulletList>\n          </StyledBullets>\n        )} */}\n        {springProps.map(({ offset }, index) => (\n          <animated.div\n            {...bind()}\n            key={index}\n            style={{\n              transform: offset.interpolate((offsetX) => `translate3d(${offsetX * 100}%, 0, 0)`),\n              position: 'absolute',\n              display: 'inline-block',\n              width: '100%',\n              height: '100%',\n              willChange: 'transform',\n            }}\n          >\n            <Box minH=\"320px\" w=\"100%\" userSelect={isDragging ? 'none' : 'auto'}>\n              {children[index]}\n            </Box>\n          </animated.div>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAMA;AACA;AADA;AAAA;AANA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAqBA;;;;A","sourceRoot":""}