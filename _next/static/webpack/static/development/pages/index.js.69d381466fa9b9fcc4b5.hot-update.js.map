{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.69d381466fa9b9fcc4b5.hot-update.js","sources":["webpack:///./src/components/Carousel/Carousel.js"],"sourcesContent":["import * as React from 'react';\nimport { Box, Button } from '@chakra-ui/core';\nimport { useMotionValue, motion } from 'framer-motion';\n\nexport default function Carousel({ children, width = 500 }) {\n  const x = useMotionValue(0);\n\n  return (\n    <Box overflow=\"hidden\">\n      <Track\n        padding={padding}\n        velocity={velocity}\n        transition={transition}\n        allowSlideToLast={allowSlideToLast}\n        overflow={overflow}\n        style={{ x }}\n      >\n        {children.map((child, i) => (\n          <Item key={i} gap={gap} padding={padding} index={i} offset={x}>\n            {child}\n          </Item>\n        ))}\n      </Track>\n    </Box>\n  );\n}\n\nfunction Track() {\n  return <motion.div></motion.div>;\n}\n\nfunction getDimensionObject(node) {\n  const rect = node.getBoundingClientRect();\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: 'x' in rect ? rect.x : rect.top,\n    left: 'y' in rect ? rect.y : rect.left,\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n  };\n}\n\nfunction useDimensions({ liveMeasure = true }) {\n  const [dimensions, setDimensions] = React.useState({});\n  const [node, setNode] = React.useState(null);\n\n  const ref = React.useCallback((node) => {\n    setNode(node);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (node) {\n      const measure = () => window.requestAnimationFrame(() => setDimensions(getDimensionObject(node)));\n      measure();\n\n      if (liveMeasure) {\n        window.addEventListener('resize', measure);\n        window.addEventListener('scroll', measure);\n\n        return () => {\n          window.removeEventListener('resize', measure);\n          window.removeEventListener('scroll', measure);\n        };\n      }\n    }\n  }, [node]);\n\n  return [ref, dimensions, node];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}