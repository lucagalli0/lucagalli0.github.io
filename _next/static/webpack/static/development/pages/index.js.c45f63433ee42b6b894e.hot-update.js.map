{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.c45f63433ee42b6b894e.hot-update.js","sources":["webpack:///./src/components/Carousel/Carousel.js"],"sourcesContent":["import * as React from 'react';\nimport styles from './carousel.module.css';\nimport { useSprings, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\n\nfunction clamp(num, clamp, higher) {\n  return higher ? Math.min(Math.max(num, clamp), higher) : Math.min(num, clamp);\n}\n\nconst pages = [\n  'https://images.pexels.com/photos/62689/pexels-photo-62689.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n  'https://images.pexels.com/photos/296878/pexels-photo-296878.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n  'https://images.pexels.com/photos/1509428/pexels-photo-1509428.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n  'https://images.pexels.com/photos/351265/pexels-photo-351265.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n  'https://images.pexels.com/photos/924675/pexels-photo-924675.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n];\n\nexport default function Carousel(props) {\n  const [ref, { width = 0 }] = useDimensions();\n  return (\n    <div ref={ref} className={styles.container}>\n      <CarouselItems width={width} {...props} />\n    </div>\n  );\n}\n\nfunction CarouselItems({ width, children }) {\n  let index = React.useRef(0).current;\n  const [props, set] = useSprings(children.length, (i) => ({ x: i * width }));\n\n  const bind = useDrag(({ down, movement: [mx], direction: [xDir], distance, cancel }) => {\n    if (down && distance > width / 2) cancel((index = clamp(index + (xDir > 0 ? -1 : 1), 0, children.length - 1)));\n    set((i) => {\n      const x = (i - index) * width + (down ? mx : 0);\n      return { x };\n    });\n  });\n  return (\n    <div style={{ width: width * children.length }}>\n      {props.map(({ x }, i) => (\n        <animated.div\n          {...bind()}\n          key={i}\n          style={{\n            height: '100%',\n            minWidth: '100%',\n            // position: 'absolute',\n            transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\n          }}\n        >\n          {children[i]}\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nfunction getDimensionObject(node) {\n  const rect = node.getBoundingClientRect();\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: 'x' in rect ? rect.x : rect.top,\n    left: 'y' in rect ? rect.y : rect.left,\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n  };\n}\n\nfunction useDimensions() {\n  const [dimensions, setDimensions] = React.useState({});\n  const [node, setNode] = React.useState(null);\n\n  const ref = React.useCallback((node) => {\n    setNode(node);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (node) {\n      const measure = () => window.requestAnimationFrame(() => setDimensions(getDimensionObject(node)));\n      measure();\n\n      window.addEventListener('resize', measure);\n      window.addEventListener('scroll', measure);\n\n      return () => {\n        window.removeEventListener('resize', measure);\n        window.removeEventListener('scroll', measure);\n      };\n    }\n  }, [node]);\n\n  return [ref, dimensions, node];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}