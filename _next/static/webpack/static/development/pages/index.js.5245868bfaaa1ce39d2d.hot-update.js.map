{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5245868bfaaa1ce39d2d.hot-update.js","sources":["webpack:///./src/components/Carousel/Carousel.js"],"sourcesContent":["import * as React from 'react';\nimport { useSprings, useSpring, animated, interpolate } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { Box, Flex, Button, Icon } from '@chakra-ui/core';\n\nexport default function Carousel({ activeIndex = 0, auto = 0, children = [], ...props }) {\n  const sliderRef = React.useRef();\n  const [slide, setSlide] = React.useState(0);\n  const [isDragging, setDragging] = React.useState(false);\n\n  // Initialize slides with spring\n  const [springProps, setSpringProps] = useSprings(children.length, (index) => ({\n    offset: index,\n  }));\n\n  const bind = useDrag(\n    ({ down, movement: [xDelta], direction: [xDir], distance, cancel, first }) => {\n      if (first) {\n        setDragging(true);\n      }\n      if (sliderRef && sliderRef.current && sliderRef.current.parentElement) {\n        const { width } = sliderRef.current.parentElement.getBoundingClientRect();\n\n        if (down && distance > width / 3) {\n          if (cancel) cancel();\n          setSlide((slide + (xDir > 0 ? -1 : 1)) % children.length);\n        }\n        setSpringProps((index) => ({\n          offset: (down ? xDelta : 0) / width + (index - slide),\n        }));\n      }\n    },\n    { filterTaps: true, delay: true, axis: 'x', enabled: true /*children.length > 1*/ }\n  );\n\n  // Triggered on slide change\n  React.useEffect(() => {\n    setSpringProps((index) => ({ offset: index - slide }));\n  }, [slide, setSpringProps]);\n\n  // Effect for autosliding\n  React.useEffect(() => {\n    let interval;\n\n    if (auto > 0) {\n      interval = setInterval(() => {\n        const targetIndex = (slide + 1) % children.length;\n        setSlide(targetIndex);\n      }, auto);\n    }\n\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [auto, children.length, slide]);\n\n  // Jump to slide index when prop changes\n  React.useEffect(() => {\n    setSlide(activeIndex % children.length);\n  }, [activeIndex, children.length]);\n\n  const nextSlide = () => {\n    setSlide((slide + 1) % children.length);\n  };\n\n  const previousSlide = () => {\n    setSlide((slide - 1) % children.length);\n  };\n\n  const [move, setMove] = React.useState(0);\n\n  const { x } = useSpring({\n    x: slide * 2 + 0.5,\n  });\n\n  console.log(move);\n\n  const scale = x\n    .interpolate({ range: [0.5, children.length * 2 + 0.5], output: [0, 1] })\n    .interpolate({ range: [0, 0.5, 1], output: [1, 0, 1] });\n\n  return (\n    <Box minH=\"320px\" w=\"100%\" ref={sliderRef} {...props}>\n      <Box position=\"relative\" overflow=\"hidden\" minH=\"320px\" w=\"100%\">\n        <Button\n          position=\"absolute\"\n          left=\"0\"\n          top=\"50%\"\n          transform=\"translateY(-50%)\"\n          zIndex=\"2\"\n          backgroundColor=\"rgba(255, 255,255, 0.2)\"\n          _hover={{\n            backgroundColor: 'rgba(255, 255,255, 0.3)',\n          }}\n          _active={{\n            backgroundColor: 'rgba(255, 255,255, 0.4)',\n          }}\n          onClick={previousSlide}\n        >\n          <Icon name=\"chevron-left\" />\n        </Button>\n        <Button\n          position=\"absolute\"\n          right=\"0\"\n          top=\"50%\"\n          transform=\"translateY(-50%)\"\n          zIndex=\"2\"\n          backgroundColor=\"rgba(255, 255,255, 0.2)\"\n          onClick={nextSlide}\n        >\n          <Icon name=\"chevron-right\" />\n        </Button>\n        {springProps.map(({ offset }, index) => (\n          <animated.div\n            {...bind()}\n            key={index}\n            style={{\n              transform: offset.interpolate((offsetX) => `translate3d(${offsetX * 100}%, 0, 0)`),\n              position: 'absolute',\n              display: 'inline-block',\n              width: '100%',\n              height: '100%',\n              willChange: 'transform',\n            }}\n          >\n            <Box minH=\"320px\" w=\"100%\" userSelect={isDragging ? 'none' : 'auto'}>\n              {children[index]}\n            </Box>\n          </animated.div>\n        ))}\n      </Box>\n      {children.length > 1 ? (\n        <Flex mx={[2, 8, 24]} alignItems=\"center\" position=\"relative\">\n          {children.map((_, i) => (\n            <Flex key={i} mx=\"0.5rem\" h=\"1rem\" w=\"1rem\" align=\"center\" justify=\"center\">\n              <Box\n                w=\"60%\"\n                h=\"60%\"\n                borderRadius=\"50%\"\n                backgroundColor=\"gray.200\"\n                cursor=\"pointer\"\n                onClick={() => setSlide(i)}\n              />\n            </Flex>\n          ))}\n          <AnimatedBox\n            position=\"absolute\"\n            h=\"1rem\"\n            w=\"1rem\"\n            borderRadius=\"50%\"\n            backgroundColor=\"green.200\"\n            transition=\"background-color 0.2s linear\"\n            cursor=\"pointer\"\n            style={{\n              transform: interpolate([x, scale], (x, scale) => `scale(${scale})`),\n            }}\n          />\n        </Flex>\n      ) : null}\n    </Box>\n  );\n}\n\nconst AnimatedBox = animated(Box);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAMA;AACA;AADA;AAAA;AANA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAAA;AAAA;AAAA;AACA;AADA;AAmEA;AADA;AAlEA;AACA;AAqEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAEA;;;;A","sourceRoot":""}